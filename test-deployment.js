// Script de test pour v√©rifier le d√©ploiement
const axios = require('axios');

const BACKEND_URL = 'https://cs2-team-analytics.onrender.com';
const FRONTEND_URL = 'https://esea-helper-by-baky.vercel.app'; // Remplacez par votre URL Vercel

async function testDeployment() {
  console.log('üß™ Test de d√©ploiement ESEA Helper by Baky');
  console.log('==========================================\n');

  try {
    // Test 1: Health check backend
    console.log('1Ô∏è‚É£ Test du backend...');
    const healthResponse = await axios.get(`${BACKEND_URL}/health`);
    console.log('‚úÖ Backend OK:', healthResponse.data);
    console.log('');

    // Test 2: Test CORS
    console.log('2Ô∏è‚É£ Test CORS...');
    try {
      const corsResponse = await axios.get(`${BACKEND_URL}/health`, {
        headers: {
          'Origin': FRONTEND_URL
        }
      });
      console.log('‚úÖ CORS OK');
    } catch (error) {
      console.log('‚ùå CORS Error:', error.message);
    }
    console.log('');

    // Test 3: Test d'une route API
    console.log('3Ô∏è‚É£ Test route API...');
    try {
      const apiResponse = await axios.post(`${BACKEND_URL}/api/team/analyze`, {
        nicknames: ['s1mple']
      });
      console.log('‚úÖ API Route OK');
    } catch (error) {
      if (error.response?.status === 404) {
        console.log('‚ùå Route API non trouv√©e - V√©rifiez les routes');
      } else {
        console.log('‚ö†Ô∏è  API Route Error (normal si pas de cl√© API):', error.response?.status);
      }
    }
    console.log('');

    console.log('üéØ R√©sum√©:');
    console.log(`Backend: ${BACKEND_URL}`);
    console.log(`Frontend: ${FRONTEND_URL}`);
    console.log('‚úÖ Tests termin√©s');

  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error.message);
  }
}

testDeployment();
